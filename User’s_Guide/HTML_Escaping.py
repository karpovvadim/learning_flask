# HTML Escaping  (Экранирование HTML)
# При возврате HTML (тип ответа по умолчанию в Flask) любые предоставленные пользователем
# значения, отображаемые в выходных данных, должны быть экранированы для защиты от атак
# внедрения. Шаблоны HTML, созданные с помощью Jinja, представленные позже, будут делать
# это автоматически.
# escape(), показанный здесь, можно использовать вручную. В большинстве примеров он
# опущен для краткости, но вы всегда должны знать, как вы используете ненадежные данные.

from flask import Flask
from markupsafe import escape

app = Flask(__name__)


@app.route("/<name>")
def hello(name):
    return f"Hello, {escape(name)}!"


if __name__ == '__main__':
    app.run(debug=True, host='localhost', port=5005)

# Если пользователю удалось отправить имя <script>alert("bad")</script>, при экраниро -
# вании оно будет отображаться как текст, а не запускаться в браузере пользователя.
# <name> в маршруте получает значение из URL-адреса и передает его функции просмотра.
# Эти переменные правила объясняются ниже.
