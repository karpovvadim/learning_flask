# About Responses (Об ответах)

# Возвращаемое значение функции представления автоматически преобразуется для вас в объект
# ответа. Если возвращаемое значение является строкой, оно преобразуется в объект ответа со
# строкой в качестве тела ответа, кодом состояния 200 OK и MIME-типом text/html. Если
# возвращаемое значение представляет собой словарь или список, для получения ответа
# вызывается jsonify(). Логика, которую Flask применяет для преобразования возвращаемых
# значений в объекты ответа, выглядит следующим образом:

# 1. Если возвращается объект ответа правильного типа, он возвращается непосредственно из
#    представления.
# 2. Если это строка, объект ответа создается с этими данными и параметрами по умолчанию.
# 3. Если это итератор или генератор, возвращающий строки или байты, он обрабатывается как
#    потоковый ответ.
# 4. Если это словарь или список, объект ответа создается с помощью jsonify().
# 5. Если возвращается кортеж, элементы в кортеже могут предоставить дополнительную
#    информацию. Такие кортежи должны быть в форме (ответ, статус), (ответ, заголовки) или
#    (ответ, статус, заголовки). Значение состояния переопределяет код состояния, а заголовки
#    могут быть списком или словарем дополнительных значений заголовков.
# 6. Если ничего из этого не работает, Flask предположит, что возвращаемое значение является
#    действительным приложением WSGI, и преобразует его в объект ответа.

# Если вы хотите получить результирующий объект ответа внутри представления, вы можете
# использовать функцию make_response().
# Представьте, что у вас есть такое представление:

from flask import Flask, render_template, make_response

app = Flask(__name__)


@app.errorhandler(404)
def not_found(error):
    return render_template('error.html'), 404


# Вам просто нужно обернуть выражение возврата с помощью make_response() и получить объект
# ответа, чтобы изменить его, а затем вернуть его:

@app.errorhandler(404)
def not_found(error):
    resp = make_response(render_template('error.html'), 404)
    resp.headers['X-Something'] = 'A value'
    return resp

# if __name__ == '__main__':
#     app.run(debug=True, host='localhost', port=5005)
